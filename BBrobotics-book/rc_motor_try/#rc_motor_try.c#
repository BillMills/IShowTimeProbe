/**
 * @file rc_test_motors.c
 * @example    rc_test_motors
 *
 * Demonstrates use of H-bridges to drive motors with the Robotics Cape and
 * BeagleBone Blue. Instructions are printed to the screen when called.
 */

#include <stdio.h>
#include <signal.h>
#include <stdlib.h> // for atoi
#include <getopt.h>
#include <rc/motor.h>
#include <rc/time.h>
#include <rc/led.h>

int freq_hz = RC_MOTOR_DEFAULT_PWM_FREQ;


#define MOTOR_FR 3
#define MOTOR_FL 2
#define MOTOR_BR 4
#define MOTOR_BL 1

//-1 to 1
void motors_set_forward(float str){
    rc_motor_set(MOTOR_FR, str);
    rc_motor_set(MOTOR_FL, str);
    rc_motor_set(MOTOR_BR, str);
    rc_motor_set(MOTOR_BL, str);
}

// -1 to 1
void motors_set_rotate(float str){
    rc_motor_set(MOTOR_FR, str);
    rc_motor_set(MOTOR_FL, str);
    rc_motor_set(MOTOR_BR, str);
    rc_motor_set(MOTOR_BL, str);
}

int main()
{
    char input;
    
    // initialize hardware first
    if(rc_motor_init_freq(freq_hz)) return -1;
    
    rc_led_set(RC_LED_GREEN,1);
    rc_led_set(RC_LED_RED,1);
    
    //free spin all motors?
    rc_motor_free_spin(0);
    printf("Motors are now ready.\n");
    
    // Turn on a raw terminal to get a single character
    system("stty raw");
    do
    {
      printf("> ");
      input = getchar();
      switch(input){
      case 'w': //forward
        motors_set_forward(.5);
        break;
      case 'd': //right
        motors_set_rotate(.3);
        break;
      case 'a': //left
        motors_set_rotate(-.3);
        break;
      case 's': //back
        motors_set_forward(-.5);
        break;
      case 'e':
        motors_set_forward(0);
        //rc_motor_brake(0);
        break;
      case 'q':
        //rc_disable_motors();
        break;
      default:
        printf("Invalid Character.\n");
      }
    }
    while(input != 'q');
    printf("Done\n");
    
    
    // final cleanup
    printf("\ncalling rc_motor_cleanup()\n");
    rc_motor_cleanup();
    rc_led_cleanup();
    system("stty cooked");
    
    return 0;
}
